# Generated by Django 2.2.9 on 2019-12-31 19:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def forward(apps, schema_editor):
    # Move all the IncomingEmails over to flat EmailMessage
    User = apps.get_model(settings.AUTH_USER_MODEL)
    IncomingEmail = apps.get_model("comlink", "IncomingEmail")
    EmailMessage = apps.get_model("comlink", "EmailMessage")
    Attachment = apps.get_model("comlink", "Attachment")

    for old_message in IncomingEmail.objects.all():
        new_message = EmailMessage.objects.create(
            user = old_message.user,
            sender = old_message.sender,
            from_str = old_message.from_str,
            recipient = old_message.recipient,
            subject = old_message.subject,
            body_plain = old_message.body_plain,
            body_html = old_message.body_html,
            stripped_text = old_message.stripped_text,
            stripped_html = old_message.stripped_html,
            stripped_signature = old_message.stripped_signature,
            message_headers = old_message.message_headers,
            content_id_map = old_message.content_id_map,
            received = old_message.received,
        )
        for attachment in old_message.attachment_set.all():
            attachment.attached_to = new_message
            attachment.save()


def reverse(apps, schema_editor):
    raise Exception("Can not reverse this migration!!!")


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('comlink', '0003_auto_20191230_1552'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.EmailField(max_length=255, verbose_name='sender')),
                ('from_str', models.CharField(max_length=255, verbose_name='from')),
                ('recipient', models.CharField(max_length=255, verbose_name='recipient')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('body_plain', models.TextField(blank=True, verbose_name='body plain')),
                ('body_html', models.TextField(blank=True, verbose_name='body html')),
                ('stripped_text', models.TextField(blank=True, verbose_name='stripped text')),
                ('stripped_html', models.TextField(blank=True, verbose_name='stripped html')),
                ('stripped_signature', models.TextField(blank=True, verbose_name='stripped signature')),
                ('message_headers', models.TextField(blank=True, help_text='Stored in JSON.', verbose_name='message headers')),
                ('content_id_map', models.TextField(blank=True, help_text='Dictionary mapping Content-ID (CID) values to corresponding attachments. Stored in JSON.', verbose_name='Content-ID map')),
                ('received', models.DateTimeField(verbose_name='received')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'email message',
                'verbose_name_plural': 'email messages',
            },
        ),
        migrations.AddField(
            model_name='attachment',
            name='attached_to',
            field=models.ForeignKey(related_name="attachments", null=True, on_delete=django.db.models.deletion.CASCADE, to='comlink.EmailMessage'),
        ),

        # Move all the IncomingEmails to EmailMessages
        migrations.RunPython(forward, migrations.RunPython.noop),

        # Make Attachment.attached_to not null
        migrations.AlterField(
            model_name='attachment',
            name='attached_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='comlink.EmailMessage'),
        ),

        # Add a few fields we forgot
        migrations.AddField(
            model_name='emailmessage',
            name='mailing_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comlink.MailingList'),
        ),
        migrations.AddField(
            model_name='mailinglist',
            name='enabled',
            field=models.BooleanField(default=True, help_text='Set to False to disable this list.'),
        ),



    ]
